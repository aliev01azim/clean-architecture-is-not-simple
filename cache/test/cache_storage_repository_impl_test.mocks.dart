// Mocks generated by Mockito 5.3.2 from annotations
// in cache/test/cache_storage_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cache/src/db/demo_db.dart' as _i2;
import 'package:cache/src/db_provider.dart' as _i4;
import 'package:cache/src/mapper/user_entity_mapper.dart' as _i6;
import 'package:cache/src/models/user_model.dart' as _i7;
import 'package:data/data.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDemoDB_0 extends _i1.SmartFake implements _i2.DemoDB {
  _FakeDemoDB_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeArticlesEntity_1 extends _i1.SmartFake implements _i3.UserEntity {
  _FakeArticlesEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DBProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockDBProvider extends _i1.Mock implements _i4.DBProvider {
  MockDBProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DemoDB get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeDemoDB_0(
          this,
          Invocation.getter(#db),
        ),
      ) as _i2.DemoDB);
  @override
  _i5.Future<int> saveUser(
    String? articles,
    String? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveArticles,
          [
            articles,
            type,
          ],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<String> fetchUser(String? type) => (super.noSuchMethod(
        Invocation.method(
          #fetchArticles,
          [type],
        ),
        returnValue: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
}

/// A class which mocks [ArticlesEntityMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticlesEntityMapper extends _i1.Mock
    implements _i6.ArticlesEntityMapper {
  MockArticlesEntityMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.UserEntity mapFromModel(_i7.UserModel? articleModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #mapFromModel,
          [articleModel],
        ),
        returnValue: _FakeArticlesEntity_1(
          this,
          Invocation.method(
            #mapFromModel,
            [articleModel],
          ),
        ),
      ) as _i3.UserEntity);
}
